"use strict";(()=>{var e={};e.id=675,e.ids=[675],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},67965:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>h,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>q,staticGenerationAsyncStorage:()=>l});var n={};r.r(n),r.d(n,{GET:()=>d,dynamic:()=>u});var i=r(79182),a=r(72007),p=r(56719),s=r(93442),o=r(35970);let u="force-dynamic";async function d(){try{let e=await o._.spinnerEquipment.findMany({select:{id:!0,equipmentModel:!0,currentCondition:!0},orderBy:{id:"asc"}});return s.NextResponse.json(e)}catch(e){return console.error("Error fetching spinner equipment:",e),s.NextResponse.json({error:"Failed to fetch spinner equipment"},{status:500})}}let c=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/data-entry/spinner-equipment/route",pathname:"/api/data-entry/spinner-equipment",filename:"route",bundlePath:"app/api/data-entry/spinner-equipment/route"},resolvedPagePath:"/home/ubuntu/american_spincast_foundry/app/app/api/data-entry/spinner-equipment/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:m,staticGenerationAsyncStorage:l,serverHooks:q}=c,y="/api/data-entry/spinner-equipment/route";function h(){return(0,p.patchFetch)({serverHooks:q,staticGenerationAsyncStorage:l})}},35970:(e,t,r)=>{r.d(t,{_:()=>i});let n=require("@prisma/client"),i=globalThis.prisma??new n.PrismaClient}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[372,609],()=>r(67965));module.exports=n})();